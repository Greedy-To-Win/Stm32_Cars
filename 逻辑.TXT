
主要逻辑：TIM3的频率为1000hz，计数1000次，1ms中断一次。

			而pid的计算和给电机的反馈在这个1ms中断中执行：
			void calculation(float Angle,int encoder_left,int encoder_right,float gyro);//pid计算,在main.c中定义,在encode.c文件的TIM3中断中运行；
			其中采用了三个环并行，直立环、速度环、转向环，除速度环采用增量PID外，均采位置PID
			
			其中直立环主要通过获取roll（翻滚角）修正姿态，其中kd通过mpu6050原始角速度来辅助
			
			速度环则是通过一系列计算得来的“目前左右电机转速”来修正
			
			转向环单用kp
			
			目前左右电机转速的计算：int Read_Encoder(u8 TIMX)；
									编码器模式采用双边沿计数，一次脉冲计数四次，溢出值0xffff（最大值），两个电机对应定时器中断中会计数中断溢出次数
									从而得到准确的计数器值
			在TIM3的中断中设置5ms标志，在5ms标志时;通过相应脉冲的计数器值计算出对应转速//不过这个转速的计算频率有待商量，或许跟pid的计算一样？但mpu6050的采样率也仅仅200hz
































